"""
Topic: Рекурсия

Description: Ханойские башни - это математическая головоломка, в которой у нас есть три стержня и n дисков.
             Цель головоломки состоит в том, чтобы переместить всю стопку на другой стержень, подчиняясь следующим простым правилам:
                1) Одновременно можно перемещать только один диск.
                2) Каждый ход состоит в том, чтобы взять верхний диск из одной из стопок и поместить его
                   поверх другой стопки, т. е. Диск может быть перемещен только в том случае,
                   если это самый верхний диск в стопке.
                3) Ни один диск не может быть помещен поверх диска меньшего размера.

Input: Строкой передается число дисков n, диск с которого надо переместить х и диск на который надо переместить y.

Output: Необходимо вывести алгоритм переноса.

Time complexity: O(2^n).

Example:


"""

n,x,y = map(int, input().split())

def hanoi(n, x, y):
    # Рассмотрим задачу для 4 дисков. Допустим необходимо переложить с 1 на 2, а в качестве промежуточного
    # будем использовать столб № 3. Получается, что задача свелась к подзадаче. Пирамиду меньшей длины необходимо
    # перекладывать на вспомогательный столб, а затем на основной.
    # Для того чтоб обощить эту задачу необходимо вычислить номер вспомогательного столбца:
    # Пусть надо перетащить пирамиду с i-го столба на к-тый, тогда номер промежуточного столба будет равен:
    # 1+2+3=6
    # i+k+t=6
    # t=6-i-k
    # Крайний случай: Количество дисков равно 1. В таком случае необходимо переложить с i-го на k-тый.
    if n == 1:
        return print(f'Переложить {n} с {x} на {y}')
    else:
        t = 6 - x - y
        hanoi(n-1,x,t)
        print(f'Переложить {n} c {x} на {y}')
        hanoi(n-1,t,y)

answer = hanoi(n, x, y)

